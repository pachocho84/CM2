<?php

namespace CM\CMBundle\Entity;

use Doctrine\ORM\EntityRepository as BaseRepository;
use CM\CMBundle\Entity\Article;

/**
 * HomepageArchiveRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HomepageArchiveRepository extends BaseRepository
{
    static protected function getOptions(array $options = array())
    {
        $options = array_merge(array(
            'locale'        => 'en'
        ), $options);

        return array_merge(array(
            'paginate' => true,
            'limit' => null,
            'locales'       => array_values(array_merge(array('en' => 'en'), array($options['locale'] => $options['locale']))),
        ), $options);
    }

    public function getArticles($categoryId, $options = array())
    {
        $options = self::getOptions($options);
        
        $count = $this->getEntityManager()->createQueryBuilder()
            ->select('count(a.id)')
            ->from('CMBundle:Article', 'a')
            ->join('a.homepageArchive', 'h', 'with', 'h.categoryId = :category_id')->setParameter(':category_id', $categoryId);

        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('a, t, h, hc, hct, i, p, l, c, u, lu, cu, pg, gr')
            ->from('CMBundle:Article', 'a')
            ->leftJoin('a.translations', 't', 'with', 't.locale IN (:locales)')->setParameter('locales', $options['locales'])
            ->join('a.homepageArchive', 'h', 'with', 'h.categoryId = :category_id')->setParameter(':category_id', $categoryId)
            ->join('h.category', 'hc')
            ->leftJoin('hc.translations', 'hct', 'with', 'hct.locale = :locale')->setParameter('locale', $options['locale'])
            ->leftJoin('a.images', 'i')
            ->join('a.post', 'p')
            ->leftJoin('p.likes', 'l')
            ->leftJoin('p.comments', 'c')
            ->leftJoin('p.user', 'u')
            ->leftJoin('l.user', 'lu')
            ->leftJoin('c.user', 'cu')
            ->leftJoin('p.page', 'pg')
            ->leftJoin('p.group', 'gr')
            ->orderBy('a.id', 'desc');

        return $options['paginate'] ? $query->getQuery()->setHint('knp_paginator.count', $count->getQuery()->getSingleScalarResult()) : $query->setMaxResults($options['limit'])->getQuery()->getResult();
    }

    public function getLastReviews($options = array())
    {
        $options = self::getOptions($options);
        
        $count = $this->getEntityManager()->createQueryBuilder()
            ->select('count(a.id)')
            ->from('CMBundle:Article', 'a')
            ->join('a.homepageArchive', 'h', 'with', 'h.categoryId = :category_id')->setParameter(':category_id', $categoryId);

        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('a, t, h, hc, hct, i, p, l, c, u, lu, cu, pg, gr')
            ->from('CMBundle:Article', 'a')
            ->leftJoin('a.translations', 't', 'with', 't.locale IN (:locales)')->setParameter('locales', $options['locales'])
            ->join('a.homepageArchive', 'h', 'with', 'h.categoryId = :category_id')->setParameter(':category_id', $categoryId)
            ->join('h.category', 'hc')
            ->leftJoin('hc.translations', 'hct', 'with', 'hct.locale = \'en\' and htc.slug = \'reviews\'')->setParameter('locale', $options['locale'])
            ->leftJoin('a.images', 'i')
            ->join('a.post', 'p')
            ->leftJoin('p.likes', 'l')
            ->leftJoin('p.comments', 'c')
            ->leftJoin('p.user', 'u')
            ->leftJoin('l.user', 'lu')
            ->leftJoin('c.user', 'cu')
            ->leftJoin('p.page', 'pg')
            ->leftJoin('p.group', 'gr')
            ->orderBy('a.id', 'desc');

        return $options['paginate'] ? $query->getQuery()->setHint('knp_paginator.count', $count->getQuery()->getSingleScalarResult()) : $query->setMaxResults($options['limit'])->getQuery()->getResult();
    }
    
    // public function filterArticles($options = array(), $count = false)
    // {
    //     $query = $this->getEntityManager()->createQueryBuilder();
    //     if (!$count) {
    //         $query->select('a, ac, at, p, pu, aa, aac');
    //     } else {
    //         $query->select('count(a.id)');
    //     }

    //     $query->from('CMBundle:Article', 'a')
    //         ->leftJoin('a.entityCategory', 'ac')
    //         ->leftJoin('a.translations', 'at')
    //         ->andWhere('at.locale in (:locales)')
    //         ->innerJoin('a.posts', 'p', 'with', 'p.type = '.Post::TYPE_CREATION)
    //         ->andWhere('p.object = :article')->setParameter('article', Article::className())
    //         ->leftJoin('p.user', 'pu')
    //         ->andWhere('a.homepage = '.true)
    //         ->leftJoin('a.homepageArchive', 'aa')
    //         ->leftJoin('aa.category', 'aac')
    //         ->leftJoin('aac.translations', 'aact')
    //         ->andWhere('aact.locale in (:locales)')
    //         ->setParameter('locales', $options['locales']);

    //     return $query;
    // }

    // public function getArticles($options = array())
    // {        
    //     $options = self::getOptions($options);

    //     $count = $this->filterArticles($options, true);

    //     $query = $this->filterArticles($options)
    //         ->orderBy('p.createdAt', 'desc');

    //     return $options['paginate'] ? $query->getQuery()->setHint('knp_paginator.count', $count->getQuery()->getSingleScalarResult()) : $query->setMaxResults($options['limit'])->getQuery()->getResult();
    // }

    // public function getArticlesByCategory($categoryId, $options = array())
    // {        
    //     $options = self::getOptions($options);

    //     $count = $this->filterArticles($options, true)
    //         ->andWhere('aac.id = :category_id')->setParameter('category_id', $categoryId);

    //     $query = $this->filterArticles($options)
    //         ->andWhere('aac.id = :category_id')->setParameter('category_id', $categoryId)
    //         ->orderBy('p.createdAt', 'desc');

    //     return $options['paginate'] ? $query->getQuery()->setHint('knp_paginator.count', $count->getQuery()->getSingleScalarResult()) : $query->setMaxResults($options['limit'])->getQuery()->getResult();
    // }

    // public function getArticlesByPage($pageId, $options = array())
    // {        
    //     $options = self::getOptions($options);

    //     $query = $this->filterArticles($options)
    //         ->andWhere('p.pageId = :page_id')->setParameter('page_id', $pageId)
    //         ->orderBy('p.createdAt', 'desc');

    //     return $options['paginate'] ? $query->getQuery()->setHint('knp_paginator.count', $count->getQuery()->getSingleScalarResult()) : $query->setMaxResults($options['limit'])->getQuery()->getResult();
    // }

    // public function getWriters($limit = false)
    // {
    //     return $this->getEntityManager()->createQueryBuilder()
    //         ->select('u')
    //         ->from('CMBundle:User', 'u')
    //         ->where('u.roles like :role')->setParameter('role', '%ROLE_WRITER%')
    //         ->getQuery()->getResult();
    //     // return UserQuery::create()->
    //     //     joinWithsfGuardUser()->
    //     //     usesfGuardUserQuery()->
    //     //         usesfGuardUserPermissionQuery()->
    //     //             filterByPermissionId(3)->
    //     //         endUse()->
    //     //         leftJoinWithHomepagePartnerUser()->
    //     //         useHomepagePartnerUserQuery()->
    //     //             leftJoinWithHomepagePartner()->
    //     //         endUse()->
    //     //     endUse()->
    //     //     withColumn('(SELECT COUNT(*) FROM homepage_archive JOIN stampa ON homepage_archive.stampa_id = stampa.id WHERE stampa.user_id = utenti.user_id)', 'nbArticles')->
    //     //     where('(SELECT COUNT(*) FROM homepage_archive JOIN stampa ON homepage_archive.stampa_id = stampa.id WHERE stampa.user_id = utenti.user_id) > 0')->
    //     //     orderBy('nbArticles', 'desc')->
    //     //     orderByCognome()->
    //     //     _if($limit)->
    //     //      limit($limit)->
    //     //     _endif()->
    //     //     find();
    // }

    // public function getNbArticlesWriters($limit = false)
    // {
    //     return $this->getEntityManager()->createQueryBuilder()
    //         ->select('p.userId, count(a.id)')
    //         ->from('CMBundle:Article', 'a')
    //         ->where('a.homepage = '.true)
    //         ->innerJoin('a.posts', 'p', 'with', 'p.type = '.Post::TYPE_CREATION)
    //         ->andWhere('p.object = :article')->setParameter('article', Article::className())
    //         ->groupBy('p.userId')
    //         ->getQuery()->getResult();
    // }
}
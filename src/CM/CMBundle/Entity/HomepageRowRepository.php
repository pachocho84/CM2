<?php

namespace CM\CMBundle\Entity;

use Doctrine\ORM\EntityRepository as BaseRepository;

/**
 * HomepageRowRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HomepageRowRepository extends BaseRepository
{
    static protected function getOptions(array $options = array())
    {
        return array_merge(array(
            'locale'        => 'en',
            'locales'       => array_values(array_merge(array('en' => 'en'), array($options['locale'] => $options['locale']))),
        ), $options);
    }
    
    // public function getColumns($options)
    // {
    //     $options = self::getOptions($options);

    //     return $this->createQueryBuilder('c')
    //         ->select('c, a, ac, act, aa, aap, aapu')
    //         ->leftJoin('c.archive', 'a')
    //         ->leftJoin('a.category', 'ac')
    //         ->leftJoin('ac.translations', 'act')
    //         ->andWhere('act.locale in (:locales)')->setParameter('locales', $options['locales'])
    //         ->leftJoin('a.article', 'aa')
    //         ->innerJoin('aa.posts', 'aap', 'with', 'aap.type = '.Post::TYPE_CREATION)
    //         ->andWhere('aap.object = \'CM\CMBundle\Entity\Article\'')
    //         ->leftJoin('aap.user', 'aapu')
    //         ->orderBy('c.order')
    //         ->getQuery()->getResult();

    // // return HomepageColumnsQuery::create()->
    // //         leftJoinWithHomepageArchive()->
    // //         useHomepageArchiveQuery()->  
    // //             leftJoinWithHomepageCategory()->
    // //             leftJoinWithStampa()->                      
    // //             useStampaQuery(null, 'LEFT JOIN')->  
    // //         joinWithI18n(sfContext::getInstance()->getUser()->getCulture(), Criteria::LEFT_JOIN)-> 
    // //               leftJoinWithsfGuardUser()->
    // //                 leftJoinWithUser()->
    // //                 withColumn('(SELECT COUNT(*) FROM commenti WHERE commenti.Oggetto = \'stampa\' AND commenti.Oggetto_id = stampa.Id)', 'nbComments')->  
    // //             endUse()->      
    // //         endUse()->
    // //         leftJoinWithHomepageBox()->
    // //         useHomepageBoxQuery()->                                  
    // //             leftJoinWith('HomepageBox.HomepageCategory BoxCategory')-> 
    // //             leftJoinWith('BoxCategory.Utenti Curatore')->                                     
    // //             leftJoinWithPage()->   
    // //         endUse()->              
    // //   orderByOrder()->
    // //   find();
    // }


    // public function getRows($options = array())
    // {
    //     return $this->createQueryBuilder('r')
    //         ->select('r')
    //         ->where('r.visible = '.true)
    //         ->orderBy('r.order')
    //         ->getQuery()->getResult();
    // }

    public function getRows($options = array())
    {
        $options = self::getOptions($options);
    
        $query = $this->createQueryBuilder('r');
        return $query->select('r, c, a, ac, act, aa, aat, aap, aapu, b, bc, bct, bp')
            ->leftJoin('r.columns', 'c')
            ->leftJoin('c.archive', 'a')
            ->leftJoin('a.category', 'ac')
            ->leftJoin('ac.translations', 'act')
            ->leftJoin('a.article', 'aa')
            ->leftJoin('aa.translations', 'aat')
            ->leftJoin('aa.posts', 'aap', 'with', 'aap.type = '.Post::TYPE_CREATION)
            ->leftJoin('aap.user', 'aapu')
            ->leftJoin('c.box', 'b')
            ->leftJoin('b.category', 'bc')
            ->leftJoin('bc.translations', 'bct')
            ->leftJoin('b.page', 'bp')
            ->andWhere($query->expr()->orX(
                $query->expr()->andX($query->expr()->andX(
                    $query->expr()->in('act.locale', ':locales'),
                    $query->expr()->in('aat.locale', ':locales')),
                    $query->expr()->eq('aap.object', '\'CM\CMBundle\Entity\Article\'')
                ),
                $query->expr()->orX(
                    $query->expr()->isNull('b.category'),
                    $query->expr()->in('bct.locale', ':locales')
                )
            ))
            ->setParameter('locales', $options['locales'])
            ->andWhere('r.visible = '.true)
            ->orderBy('r.order')
            ->getQuery()->getResult();
    }
}

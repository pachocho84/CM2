<?php

namespace CM\CMBundle\Entity;

use Doctrine\ORM\EntityRepository as BaseRepository;
use Doctrine\ORM\Query;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FanRepository extends BaseRepository
{
    public function getUserBiography($userId)
    {
        return $this->createQueryBuilder('b')
            ->select('b')
            ->leftJoin('b.posts', 'p', 'WITH', 'p.type ='.Post::TYPE_CREATION)
            ->leftJoin('p.user', 'u')
            ->where('u.id = :user_id')->setParameter('user_id', $userId)
            ->getQuery()->getSingleResult();
    }


	public static function getUserFans($user_id, $limit = null)
	{
		return $this->createQueryBuilder('f')
			->select('f, u, uut, ut')
			->leftJoin()
		return UserQuery::create()->
			useFanRelatedByFromUserIdQuery()->
				filterByUserId($user_id)->
			endUse()->
			_if($limit)->
				limit($limit)->
				orderByImg('desc')->
			_else()->
				leftJoinWithUserTagRel()->
				useUserTagRelQuery(null, 'left join')->
					leftJoinWithUserTag()->
					useUserTagQuery(null, 'left join')->
						joinWithI18n()->
					endUse()->
				endUse()->
				leftJoinWithPost()->
				usePostQuery(null, 'left join')->
					joinWithEntity()->
					useEntityQuery()->
						joinWithI18n('en')->
					endUse()->
				endUse()->
				addJoinCondition('Post', 'Post.Object = ?', 'biography')->
				orderByLastName()->
			_endIf()->
			joinWithsfGuardUser()->
			where('User.Enabled = ?', true)->
			where('sfGuardUser.IsActive = ?', true)->
			find();
	}
	
	public static function countUserFans($user_id)
	{
		return FanQuery::create()->
			filterByUserId($user_id)->
			useUserRelatedByFromUserIdQuery()->
				joinWithsfGuardUser()->
			endUse()->
			with('UserRelatedByFromUserId')->
			where('UserRelatedByFromUserId.Enabled = ?', true)->
			where('sfGuardUser.IsActive = ?', true)->
			count();
	}

  static public function getWhoImFanOf()
  {
		if (sfContext::getInstance()->getUser()->isAuthenticated()) {
	    return FanQuery::create()->
	      select('UserId')->
	      filterByFromUserId(sfContext::getInstance()->getUser()->getId())->
	      find();
		} else {
			return new PropelObjectCollection();
		}
  }

  static public function checkIfImFan($fan_id, $object = 'user')
  {
		if (sfContext::getInstance()->getUser()->isAuthenticated()) {
	    return FanQuery::create()->
				_if($object == 'user')->
	      	filterByUserId($fan_id)->
				_elseif($object == 'page')->
	      	filterByPageId($fan_id)->
				_elseif($object == 'group')->
	      	filterByGroupId($fan_id)->
				_endIf()->
	      filterByFromUserId(sfContext::getInstance()->getUser()->getId())->
	      findOne();
		} else {
			return false;
		}
  }
}

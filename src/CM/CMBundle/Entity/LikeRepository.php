<?php

namespace CM\CMBundle\Entity;

use Doctrine\ORM\EntityRepository as BaseRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * LikeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LikeRepository extends BaseRepository
{
    public function checkIfUserLikesIt($user, $type, $id)
    {
        return $this->createQueryBuilder('l')
            ->select('COUNT(l)')
            ->where('l.'.$type.' = :id')->setParameter('id', $id)
            ->andWhere('l.user = :user')->setParameter('user', $user)
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function whoLikesIt($type, $id)
    {
        $count = $this->getEntityManager()->createQueryBuilder()
            ->select('count(u.id)')
            ->from('CMBundle:User', 'u')
            ->join('u.likes', 'l', 'with', 'l.'.$type.' = :id')->setParameter('id', $id);

        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('u')
            ->from('CMBundle:User', 'u')
            ->join('u.likes', 'l', 'with', 'l.'.$type.' = :id')->setParameter('id', $id);

        return $query->getQuery()->setHint('knp_paginator.count', $count->getQuery()->getSingleScalarResult());
    }

    public function getLikes(array $ids)
    {
        return $this->createQueryBuilder('l')
            ->select('l, u')
            ->join('l.user', 'u')
            ->where('l.id in (:ids)')->setParameter('ids', $ids)
            ->orderBy('l.id', 'desc')
            ->getQuery()
            ->getResult();
    }
}
    
<?php

namespace CM\CMBundle\Entity;

use Doctrine\ORM\EntityRepository as BaseRepository;
use Doctrine\ORM\Query;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BiographyRepository extends BaseRepository
{
    static protected function getOptions(array $options = array())
    {
        $options = array_merge(array(
            'locale' => 'en'
        ), $options);
        
        return array_merge(array(
            'locales' => array_values(array_merge(array('en' => 'en'), array($options['locale'] => $options['locale'])))
        ), $options);
    }

    public function getUserBiography($userId, $options = array())
    {
        $options = self::getOptions($options);

        try {
            $biography = $this->createQueryBuilder('b')
                ->select('b, t')
                ->leftJoin('b.translations', 't', 'with', 't.locale IN (:locales)')->setParameter('locales', $options['locales'])
                ->join('b.post', 'p', 'with', 'p.userId = :user_id')->setParameter('user_id', $userId)
                ->setMaxResults(1)
                ->getQuery()
                ->getSingleResult();
        } catch (\Exception $e) {
            $biography = null;
        }
        return $biography;
    }

    public function getGroupBiography($groupId, $options = array())
    {
        $options = self::getOptions($options);

        try {
            $biography = $this->createQueryBuilder('b')
                ->select('b, t')
                ->leftJoin('b.translations', 't', 'with', 't.locale IN (:locales)')->setParameter('locales', $options['locales'])
                ->join('b.post', 'p', 'with', 'p.groupId = :user_id')->setParameter('user_id', $userId)
                ->setMaxResults(1)
                ->getQuery()
                ->getSingleResult();
        } catch (\Exception $e) {
            $biography = null;
        }
        return $biography;
    }

    public function getPageBiography($pageId, $options = array())
    {
        $options = self::getOptions($options);

        try {
            $biography = $this->createQueryBuilder('b')
                ->select('b, t')
                ->leftJoin('b.translations', 't', 'with', 't.locale IN (:locales)')->setParameter('locales', $options['locales'])
                ->join('b.post', 'p', 'with', 'p.pageId = :user_id')->setParameter('user_id', $userId)
                ->setMaxResults(1)
                ->getQuery()
                ->getSingleResult();
        } catch (\Exception $e) {
            $biography = null;
        }
        return $biography;
    }
}

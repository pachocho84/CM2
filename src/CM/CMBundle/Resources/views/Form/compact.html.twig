{% use 'A2lixTranslationFormBundle::default.html.twig' %}

{# Widgets #}

{% block form_widget_simple %}
{% spaceless %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    {% set type = type|default('text') %}
    {% if type == 'file' %}
        {% set required = false %}
        {% set notFormControl = true %}
        {% if imgEdit is defined %}
            {% set label = 'Browse image' %}
            <div class="fileinput fileinput-new" data-provides="fileinput">
                {{ imgEdit.box|raw }}
                <div class="fileinput-preview fileinput-exists image_box" data-trigger="fileinput" style="width: {{ imgEdit.width }}px; height: {{ imgEdit.height|default(imgEdit.width) }}px;"></div>
        {% else %}
            <div class="fileinput fileinput-new input-group" data-provides="fileinput">

                <div class="form-control" data-trigger="fileinput">
                    <i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename">{{ label|trans({}, translation_domain) }}</span>
                </div>
            {% set inputGroup = true %}
            {% set label = 'Browse' %}
        {% endif %}
        <div>
        <span class="{% if inputGroup|default(false) %}input-group-addon {% endif %}btn btn-default btn-file">
            <span class="fileinput-new">{{ label|trans({}, translation_domain) }}</span>
            <span class="fileinput-exists">{{ 'Change'|trans({}, translation_domain) }}</span>
    {% elseif type == 'date' %}
        <div class="input-group input-append date" datepicker-container datepicker-format="{{ date_format() }}">
            <input type="text" class="form-control" readonly {% if value is not empty %}value="{{ value }}" {% endif %} placeholder="{{ label|trans({}, translation_domain) }}{% if required %} *{% endif %}" />
            <span class="input-group-addon btn">{{ icon('Calendar') }}</span>
        </div>
        {% set type = 'hidden' %}
    {% elseif type == 'time' %}
        {% set type = 'text' %}
        {% if value is not empty %}{% set value = value|format_datetime('q') %}{% endif %}
        {% set attr = attr|merge({'timepicker-container': '', 'data-mask': '99:99:99'}) %}
    {% elseif type == 'text' and form.vars.attr.datetimepicker is defined %}
        <div class="input-group input-append date" datetimepicker-container datetimepicker-format="{{ datetime_format('js') }}" datetimepicker-format-php="{{ datetime_format('php') }}">
            <input type="text" class="form-control" readonly {% if value is not empty %}value="{{ value|format_datetime(datetime_format('php')) }}" {% endif %} placeholder="{{ label|trans({}, translation_domain) }}{% if required %} *{% endif %}" />
            <span class="input-group-addon btn">{{ icon('Calendar') }}</span>
        </div>
        {% set type = 'hidden' %}
    {% endif %}
    {% if not notFormControl|default(false) %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
    {% endif %}
    <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty and value is not iterable %}value="{{ value }}" {% endif %} placeholder="{{ label|trans({}, translation_domain) }}{% if required %} *{% endif %}"/>
    {% if type == 'file' %}
            </span>
            <a href="#" class="{% if inputGroup|default(false) %}input-group-addon {% endif %}btn btn-default fileinput-exists" data-dismiss="fileinput">{{ 'Remove'|trans({}, translation_domain) }}</a>
        </div>
        </div>
    {% endif %}
{% endspaceless %}
{% endblock form_widget_simple %}

{% block button_widget %}
{% spaceless %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    {% if type == 'submit' %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' btn btn-primary')|trim}) %}
    {% endif %}
    <div class="text-right">
        <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ label|trans({}, translation_domain) }}</button>
    </div>
{% endspaceless %}
{% endblock button_widget %}

{% block datetime_widget %}
{% spaceless %}
    {% if widget == 'single_text' %}
        {{ block('form_widget_simple') }}
    {% else %}
        <div class="col-lg-9">
            <div {{ block('widget_container_attributes') }} class="row">
                <div class="col-lg-6{% if form.vars.errors|length > 0 %} has-error{% endif %}">
                    {{ form_widget(form.date) }}
                    {{ form_errors(form.date) }}
                </div>
                <div class="col-lg-6{% if form.vars.errors|length > 0 %} has-error{% endif %}">
                    {{ form_widget(form.time) }}
                    {{ form_errors(form.time) }}
                </div>
            </div>
        </div>
    {% endif %}
{% endspaceless %}
{% endblock datetime_widget %}

{% block date_widget %}
{% spaceless %}
    {% if widget == 'single_text' %}
        {{ block('form_widget_simple') }}
    {% else %}
        <div {{ block('widget_container_attributes') }}>
            {{ date_pattern|replace({
                '{{ year }}':  form_widget(form.year),
                '{{ month }}': form_widget(form.month),
                '{{ day }}':   form_widget(form.day),
            })|raw }}
        </div>
    {% endif %}
{% endspaceless %}
{% endblock date_widget %}

{% block time_widget %}
{% spaceless %}
    {% if widget == 'single_text' %}
        <div time>{{ block('form_widget_simple') }}</div>
    {% else %}
        {% set vars = widget == 'text' ? {attr: {size: 1}} : {} %}
        {% set vars = vars|merge({type: 'time'}) %}
        <div {{ block('widget_container_attributes') }}>
            {{ form_widget(form.hour, vars|merge({prefix: 'h'})) }}
            {% if with_minutes %}{{ form_widget(form.minute, vars|merge({prefix: 'm'})) }}{% endif %}
            {% if with_seconds %}{{ form_widget(form.second, vars|merge({prefix: 's'})) }}{% endif %}
        </div>
    {% endif %}
{% endspaceless %}
{% endblock time_widget %}

{% block hidden_widget %}
{% spaceless %}
    {% set type = type|default('hidden') %}
    {{ block('form_widget_simple') }}
{% endspaceless %}
{% endblock hidden_widget %}

{% block textarea_widget %}
{% spaceless %}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    <textarea {{ block('widget_attributes') }} placeholder="{{ label|trans({}, translation_domain) }}">{{ value }}</textarea>
{% endspaceless %}
{% endblock textarea_widget %}

{% block form_widget_compound %}
{% spaceless %}
    <div {{ block('widget_container_attributes') }}>
        {% if form.parent is empty %}
            {{ form_errors(form) }}
        {% endif %}
	    <div class="clearfix">
            {{ block('form_rows_compound') }}
        </div>
        {{ form_rest(form) }}
    </div>
{% endspaceless %}
{% endblock form_widget_compound %}

{% block collection_widget %}
{% spaceless %}
    {% if prototype is defined %}
        {% set attr = attr|merge({'data-prototype': form_row(prototype) }) %}
    {% endif %}
    {{ block('form_widget') }}
{% endspaceless %}
{% endblock collection_widget %}

{% block choice_widget_collapsed %}
{% spaceless %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    {% set type = type|default('text') %}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
    {% if type == 'time' %}<div class="input-group"><span class="input-group-addon">{{ prefix }}</span>{% endif %}
    <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
        {% if form.vars.value|length == 0 %}
            <option value="" selected="selected" disabled="disabled">{{ label|trans({}, translation_domain) }}{% if required %} *{% endif %}</option>
        {% endif %}
        {% if empty_value is not none %}
            {% if empty_value is not null %}{% set empty_value = empty_value[:1]|upper ~ empty_value[1:] %}{% endif %}
            <option value=""{% if required and value is empty %} selected="selected"{% endif %}>{{ empty_value|trans({}, translation_domain) }}</option>
        {% endif %}
        {% if preferred_choices|length > 0 %}
            {% set options = preferred_choices|merge({}) %}
            {{ block('choice_widget_options') }}
            {% if choices|length > 0 and separator is not none %}
                <option disabled="disabled">{{ separator }}</option>
            {% endif %}
        {% endif %}
        {% set options = choices %}
        {{ block('choice_widget_options') }}
    </select>
    {% if type == 'time' %}</div>{% endif %}
{% endspaceless %}
{% endblock choice_widget_collapsed %}

{% block choice_widget_options %}
{% spaceless %}
    {% for group_label, choice in options %}
        {% if choice is iterable %}
            <optgroup label="{{ group_label|trans({}, translation_domain) }}">
                {% set options = choice %}
                {{ block('choice_widget_options') }}
            </optgroup>
        {% else %}
            {% if choice.label is not null %}{% set empty_value = choice.label[:1]|upper ~ choice.label[1:] %}{% endif %}
            <option value="{{ choice.value }}"{% if choice is selectedchoice(value) %} selected="selected"{% endif %}>{{ empty_value|trans({}, translation_domain) }}</option>
        {% endif %}
    {% endfor %}
{% endspaceless %}
{% endblock choice_widget_options %}

{% block choice_widget_expanded %}
{% spaceless %}
    <div {{ block('widget_container_attributes') }}>
        <label class="radio-inline control-label">
            {{ form.vars.label|default(form.vars.name|humanize)|trans({}, translation_domain) }}
        </label>
        {% for child in form %}
            <label class="{{ multiple ? 'checkbox' : 'radio' }}-inline">
                {{ form_widget(child) }}
                {{ child.vars.label|humanize|trans({}, translation_domain) }}
            </label>
        {% endfor %}
    </div>
{% endspaceless %}
{% endblock choice_widget_expanded %}

{% block checkbox_widget %}
{% spaceless %}
    <label class="checkbox-inline">
        <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
        {{ form.vars.label|default(form.vars.name|humanize)|trans({}, translation_domain) }}
    </label>
{% endspaceless %}
{% endblock checkbox_widget %}

{% block _cm_cmbundle_comment_comment_widget %}
{% spaceless %}
    {% if downward|default(false) %}
        {% set attr = {placeholder: 'write a comment...'|trans, class: 'input-lg comment form-control', expandable: 'small', 'comment-type': 'downward', autocomplete: 'off'} %}
    {% else %}
        {% set attr = attr|merge({placeholder: 'write a comment...'|trans, class: 'comment', 'comment-type': 'upward', autocomplete: 'off'}) %}
    {% endif %}
    {{ block('textarea_widget') }}
{% endspaceless %}
{% endblock  %}

{% block _cm_cmbundle_relationtype_name_widget %}
{% spaceless %}
    {% set attr = {class: 'input-sm form-control'} %}
    <div class="col-xs-9">
        <input autocomplete="off" type="text" {{ block('widget_attributes') }} />
    </div>
{% endspaceless %}
{% endblock  %}

{% block cm_cmbundle_tags_widget %}
{% spaceless %}
    <div class="hidden">{{ block('choice_widget') }}</div>
    {% set fake = true %}
    {{ block('form_widget_simple') }}
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_event_entityUsers_entry_entityUserTags_widget %}
{% spaceless %}
    {{ block('cm_cmbundle_tags_widget') }}
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_disc_entityUsers_entry_entityUserTags_widget %}
{% spaceless %}
    {{ block('cm_cmbundle_tags_widget') }}
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_usertags_userTags_widget %}
{% spaceless %}
    {{ block('cm_cmbundle_tags_widget') }}
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_page_pageTags_widget %}
{% spaceless %}
    {{ block('cm_cmbundle_tags_widget') }}
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_pagemembers_pageUsers_entry_pageUserTags_widget %}
{% spaceless %}
    {{ block('cm_cmbundle_tags_widget') }}
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_article_entityUsers_entry_entityUserTags_widget %}
{% spaceless %}
    {{ block('cm_cmbundle_tags_widget') }}
{% endspaceless %}
{% endblock %}

{% block imageBox_widget %}
    {% set imgEdit = {box: show_img_box(img|default(null)|imagine_filter('full'), {width: width, height: height|default(width), offset: offset|default(null), box_attributes: {class: 'fileinput-new', style: 'border: 1px solid #bbbbbb; margin-bottom: 10px;' }}), width: width, height: height|default(width)} %}
    {{ block('form_widget_simple')}}
    {% if offsetForm is not null %}{{ form_widget(offsetForm) }}{% endif %}
{% endblock %}

{% block profile_image_widget %}
    {% set img = form.parent.vars.value.img %}
    {% set offset = form.parent.vars.value.imgOffset %}
    {% set width = 150 %}
    {% set offsetForm = form.parent.children.imgOffset %}
    {{ block('imageBox_widget') }}
{% endblock %}

{% block _fos_user_registration_form_imgFile_widget %}
    {{ block('profile_image_widget') }}
{% endblock %}

{% block _cm_cmbundle_user_imgFile_widget %}
    {{ block('profile_image_widget') }}
{% endblock %}

{% block _cm_cmbundle_user_image_imgFile_widget %}
    {{ block('profile_image_widget') }}
{% endblock %}

{% block _cm_cmbundle_page_imgFile_widget %}
    {{ block('profile_image_widget') }}
{% endblock %}

{% block cover_image_widget %}
    {% set img = form.parent.vars.value.coverImg %}
    {% set offset = form.parent.vars.value.coverImgOffset %}
    {% set width = 360 %}
    {% set height = 150 %}
    {% set offsetForm = form.parent.children.coverImgOffset %}
    {{ block('imageBox_widget') }}
{% endblock %}

{% block _cm_cmbundle_user_coverImgFile_widget %}
    {{ block('cover_image_widget') }}
{% endblock %}

{% block _cm_cmbundle_user_image_coverImgFile_widget %}
    {{ block('cover_image_widget') }}
{% endblock %}

{% block _cm_cmbundle_page_coverImgFile_widget %}
    {{ block('cover_image_widget') }}
{% endblock %}

{% block entity_image_widget %}
    {% set img = form.parent.vars.value.img %}
    {% set offset = form.parent.vars.value.imgOffset %}
    {% set width = 300 %}
    {% set height = 200 %}
    {% set offsetForm = form.parent.parent.imgOffset %}
    {{ block('imageBox_widget') }}
{% endblock %}

{% block _cm_cmbundle_event_image_imgFile_widget %}
    {{ block('entity_image_widget') }}
{% endblock %}

{% block _cm_cmbundle_disc_image_imgFile_widget %}
    {{ block('entity_image_widget') }}
{% endblock %}

{% block _cm_cmbundle_article_image_imgFile_widget %}
    {{ block('entity_image_widget') }}
{% endblock %}

{% block _cm_cmbundle_imagealbum_image_imgFile_widget %}
    {% set img = form.parent.vars.value.img %}
    {% set width = 300 %}
    {% set offsetForm = null %}
    {{ block('imageBox_widget') }}
{% endblock %}

{# Labels #}

{% block form_label %}
{% spaceless %}
{% endspaceless %}
{% endblock form_label %}

{# Rows #}

{% block form_row %}
{% spaceless %}
    {% if compound %}
        {{ block('form_row_compound') }}
    {% else %}
        {{ block('form_row_simple') }}
    {% endif %}
{% endspaceless %}
{% endblock form_row %}

{% block form_row_compound %}
{% spaceless %}
    <div{% if form.vars.errors|length > 0 %} class="has-error"{% endif %}>
        {{ form_widget(form) }}
        {{ form_errors(form) }}
    </div>
{% endspaceless %}
{% endblock form_row_compound %}

{% block form_row_simple %}
{% spaceless %}
    <div class="form-group{% if form.vars.errors|length > 0 %} has-error{% endif %}">
        {{ form_widget(form) }}
        {{ form_errors(form) }}
    </div>
{% endspaceless %}
{% endblock form_row_simple %}

{% block datetime_row %}
{% spaceless %}
    {{ block('form_row_simple') }}
{% endspaceless %}
{% endblock %}

{% block time_row %}
{% spaceless %}
    {{ block('form_row_simple') }}
{% endspaceless %}
{% endblock %}

{% block choice_row %}
    <div class="form-group{% if form.vars.errors|length > 0 %} has-error{% endif %}">
        {{ form_widget(form) }}
        {{ form_errors(form) }}
    </div>
{% endblock %}

{% block button_row %}
    {{ form_widget(form) }}
{% endblock %}

{% block checkbox_row %}
{% spaceless %}
    <div class="form-group{% if form.vars.errors|length > 0 %} has-error{% endif %}">
        {{ form_widget(form) }}
        {{ form_errors(form) }}
    </div>
{% endspaceless %}
{% endblock %}

{% block radio_row %}
{% spaceless %}
    <div class="form-group{% if form.vars.errors|length > 0 %} has-error{% endif %}">
        <div class="radio">
            {{ form_widget(form) }} {{ form.vars.label|default(form.vars.name|humanize)|trans({}, translation_domain) }}
            {{ form_errors(form) }}
        </div>
    </div>
{% endspaceless %}
{% endblock %}

{% block a2lix_translations_row %}
{% spaceless %}
    <div {{ block('widget_container_attributes') }}> 
        {{ form_widget(form) }}
        {{ form_errors(form) }}
    </div>
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_biography_translations_title_row %}
{% endblock %}

{% block cm_cmbundle_entityuser_collection_row %}
{% spaceless %}
    <div class="panel-group" id="accordion-protagonists">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion-protagonists" href="#collapse-protagonists">
                        {{ 'Protagonists'|trans }} <small>{{ 'click to shrink'|trans }}</small>
                    </a>
                </h4>
            </div>
            <div id="collapse-protagonists" class="panel-collapse collapse in">
                <div class="panel-body" {{ block('widget_container_attributes') }}>            
                    <div class="form-group protagonist_typeahead" typeahead-callback="{{ path('entityuser_add_entityusers', {object: form.parent.vars.data.className|class_name|lower, user_id: 'USER_ID', protagonist_new_id: 'NEW_ID', entity_type: 'ENTITY_TYPE'}) }}">
                        <div class="collection-items">
                            <div class="{{ form.vars.id }}_control_group">
                                <div id="protagonists_finder_container" class="form-group">
                                    <input type="text" id="protagonists_finder" class="form-control" placeholder="{{ 'Add protagonists'|trans }}" />
                                </div>
                                {{ include('CMBundle:EntityUser:addEntityUsers.html.twig', {entityUsers: form, entity: form.parent.vars.data, newEntry: form.parent.vars.data == null}) }}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_pagemembers_pageUsers_row %}
    <div class="form-group protagonist_typeahead" typeahead-callback="{{ path('pageuser_add_pageusers', {pageId: form.parent.vars.data.id, user_id: 'USER_ID', protagonist_new_id: 'NEW_ID'}) }}">
        <div class="collection-items">
            <div id="protagonists_finder_container" class="form-group">
                <input type="text" id="protagonists_finder" class="form-control" placeholder="{{ 'Add members'|trans }}" />
            </div>
            {{ include('CMBundle:Page:member.html.twig', {pageUsers: form, page: form.parent.vars.data, newEntry: form.parent.vars.data == null}) }}
        </div>
    </div>
{% endblock %}

{% block recipients_selector_row %}
{% spaceless %}
    {{ form_errors(form) }}
    <div class="form-group recipients_typeahead{% if form.vars.errors|length > 0 %} has-error{% endif %}">
        <div class="cm_cmbundle_message_recipients_control_group">
            <div id="recipients_finder_container">
                <input type="text" id="recipients_finder" class="form-control" placeholder="{{ 'To'|trans }}" />
            </div>
            {{ form_widget(form, {type: 'hidden', value: user.slug|default('')}) }}
        </div>
    </div>
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_event_entityUsers_row %}
{% spaceless %}
    {{ block('cm_cmbundle_entityuser_collection_row') }}
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_disc_entityUsers_row %}
{% spaceless %}
    {{ block('cm_cmbundle_entityuser_collection_row') }}
{% endspaceless %}
{% endblock %}

{% block _cm_cmbundle_article_entityUsers_row %}
{% spaceless %}
    {{ block('cm_cmbundle_entityuser_collection_row') }}
{% endspaceless %}
{% endblock %}

{# Misc #}

{% block form_start %}
{% spaceless %}
    {% set method = method|upper %}
    {% if method in ["GET", "POST"] %}
        {% set form_method = method %}
    {% else %}
        {% set form_method = "POST" %}
    {% endif %}
    {% if app.environment == 'dev' %}
        {% set attr = attr|merge({novalidate: 'novalidate'}) %}
    {% endif %}
    <form {#form-stored="{{ form.vars.name }}"#} method="{{ form_method|lower }}" action="{{ action }}"{% for attrname, attrvalue in attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}{% if multipart %} enctype="multipart/form-data"{% endif %}>
    {% if form_method != method %}
        <input type="hidden" name="_method" value="{{ method }}" />
    {% endif %}
{% endspaceless %}
{% endblock form_start %}

{% block form_errors %}
{% spaceless %}
    {% if errors|length > 0 %}
    <ul>
        {% for error in errors %}
            <li class="text-danger">{{ error.message }}</li>
        {% endfor %}
    </ul>
    {% endif %}
{% endspaceless %}
{% endblock form_errors %}

{% block button_attributes %}
{% spaceless %}
    id="{{ id }}" name="{{ full_name }}"{% if disabled %} disabled="disabled"{% endif %}
    {% if attr.class is not defined or 'btn' not in attr.class|split(' ') %}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' btn btn-default')|trim}) %}
    {% endif %}
    {% for attrname, attrvalue in attr %}{{ attrname }}="{{ attrvalue }}" {% endfor %}
{% endspaceless %}
{% endblock button_attributes %}

{% block widget_attributes %}
{% spaceless %}
    {% if not fake|default(false) %}
        id="{{ id }}" name="{{ full_name }}"
    {% endif %}
    {%- if read_only %} readonly="readonly"{% endif -%}
    {%- if disabled %} disabled="disabled"{% endif -%}
    {%- if required %} required="required"{% endif -%}
    {%- if max_length %} maxlength="{{ max_length }}"{% endif -%}
    {%- if pattern %} pattern="{{ pattern }}"{% endif -%}
    {%- for attrname, attrvalue in attr -%}
        {{- " " -}}
        {%- if attrname in ['placeholder', 'title'] -%}
            {{- attrname }}="{{ attrvalue|trans({}, translation_domain) }}"
        {%- elseif attrvalue is sameas(true) -%}
            {{- attrname }}="{{ attrname }}"
        {%- elseif attrvalue is not sameas(false) -%}
            {{- attrname }}="{{ attrvalue }}"
        {%- endif -%}
    {%- endfor -%}
{% endspaceless %}
{% endblock widget_attributes %}